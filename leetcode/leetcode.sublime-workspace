{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"ri",
				"region"
			],
			[
				"sita",
				"sitAt-1"
			],
			[
				"si",
				"siteAt"
			],
			[
				"put",
				"putIfAbsent"
			],
			[
				"repl",
				"replace"
			],
			[
				"ma",
				"makeLargestSpecial"
			],
			[
				"so",
				"Solution"
			],
			[
				"wor",
				"wordSquares"
			],
			[
				"pre",
				"prefixCache"
			],
			[
				"n",
				"n_letters"
			],
			[
				"nei",
				"neighbors"
			],
			[
				"rever",
				"reverse"
			],
			[
				"re",
				"reverse"
			],
			[
				"res",
				"reverse"
			],
			[
				"rem",
				"removeInvalidParentheses"
			],
			[
				"lo",
				"longestValidParentheses"
			],
			[
				"check",
				"checkValidString"
			],
			[
				"rec",
				"rectangleArea"
			],
			[
				"sor",
				"SortedDict"
			],
			[
				"em",
				"EdmondsKarp"
			],
			[
				"cap",
				"capacity"
			],
			[
				"pat",
				"pathFlow"
			],
			[
				"flo",
				"pathFlow"
			],
			[
				"ca",
				"capacity"
			],
			[
				"ran",
				"rand"
			],
			[
				"j",
				"j"
			],
			[
				"num",
				"nums"
			],
			[
				"sp",
				"splitArray"
			],
			[
				"min",
				"minDistance"
			],
			[
				"car",
				"cars"
			],
			[
				"ass",
				"assign_car"
			],
			[
				"sw",
				"switch_assign_distance"
			],
			[
				"dis",
				"distance"
			],
			[
				"peo",
				"peoples"
			],
			[
				"pe",
				"peoples"
			],
			[
				"near",
				"nearest_available_people"
			],
			[
				"nea",
				"nearest_available_people"
			],
			[
				"peop",
				"peoples"
			],
			[
				"seq",
				"sequences"
			],
			[
				"beg",
				"beginWord"
			],
			[
				"word",
				"wordList"
			],
			[
				"find",
				"findLadders"
			],
			[
				"a",
				"a"
			],
			[
				"sta",
				"stations"
			],
			[
				"stat",
				"station"
			],
			[
				"start",
				"startFuel"
			],
			[
				"star",
				"startFuel"
			],
			[
				"remo",
				"removeBoxesSub"
			],
			[
				"che",
				"cherryPickup"
			],
			[
				"con",
				"consectivePoint"
			],
			[
				"co",
				"consectivePoint"
			],
			[
				"strin",
				"strangePrinter"
			],
			[
				"k",
				"kInversePairs"
			],
			[
				"max",
				"maxVacationDays"
			],
			[
				"box",
				"boxes"
			],
			[
				"remove",
				"removeBoxes"
			],
			[
				"mac",
				"machines"
			],
			[
				"rep",
				"repeatStr"
			],
			[
				"reat",
				"repeatStr"
			],
			[
				"subst",
				"substr"
			],
			[
				"add",
				"addtional"
			],
			[
				"time",
				"times2"
			],
			[
				"can",
				"candidate1"
			],
			[
				"arr",
				"array"
			],
			[
				"sorte",
				"sorted_num1"
			],
			[
				"nu",
				"nums1"
			],
			[
				"sort",
				"sorted_num1"
			],
			[
				"se",
				"secondIndex"
			],
			[
				"mi",
				"minIndex"
			],
			[
				"lef",
				"left"
			],
			[
				"righ",
				"right"
			],
			[
				"left",
				"left_bound"
			],
			[
				"ro",
				"rotate2"
			],
			[
				"area",
				"maxArea"
			],
			[
				"up",
				"uptop"
			],
			[
				"Max",
				"MAX"
			],
			[
				"list",
				"lists"
			],
			[
				"api",
				"api2"
			],
			[
				"sli",
				"slidingPuzzle"
			],
			[
				"emp",
				"emptyY"
			],
			[
				"empt",
				"emptyY"
			],
			[
				"tar",
				"targetY"
			],
			[
				"right",
				"rightPourLoc"
			],
			[
				"po",
				"pour_water"
			],
			[
				"water",
				"waters"
			],
			[
				"st",
				"start"
			],
			[
				"ip",
				"ip_to_number"
			],
			[
				"rig",
				"right_min"
			],
			[
				"heap",
				"heapq"
			],
			[
				"hea",
				"heapq"
			],
			[
				"mea",
				"median"
			],
			[
				"as",
				"assert"
			],
			[
				"eq",
				"equationsPossible"
			],
			[
				"lar",
				"largestIsland"
			],
			[
				"ta",
				"tallestBillboard"
			],
			[
				"prev",
				"prev_height"
			],
			[
				"c",
				"CAMERA"
			],
			[
				"not",
				"NOT_COVERED"
			],
			[
				"cont",
				"consecutive"
			],
			[
				"no",
				"nonRep"
			],
			[
				"is",
				"isRationalEqual"
			],
			[
				"odd",
				"odd_jump_ind"
			],
			[
				"ev",
				"even_jump_ind"
			],
			[
				"eve",
				"even_jump"
			],
			[
				"even",
				"even_jump"
			],
			[
				"typ",
				"type2"
			],
			[
				"fl",
				"flipgame"
			],
			[
				"hei",
				"heights"
			],
			[
				"he",
				"heightMap"
			],
			[
				"to",
				"toHex"
			],
			[
				"sum",
				"sumOfLeftLeaves"
			],
			[
				"di",
				"diStringMatch0"
			],
			[
				"get",
				"getPermutation"
			],
			[
				"cou",
				"countArrangement"
			],
			[
				"fin",
				"findSubsequences"
			],
			[
				"per",
				"permuteUnique0"
			],
			[
				"perm",
				"permuteUnique"
			],
			[
				"nex",
				"next-permutation"
			],
			[
				"ne",
				"nextPermutation2"
			],
			[
				"sco",
				"scoreOfParentheses"
			],
			[
				"cu",
				"current_end"
			],
			[
				"curr",
				"current_start"
			],
			[
				"th",
				"threeSumMulti"
			],
			[
				"dea",
				"deadSet"
			],
			[
				"dead",
				"deadSet"
			],
			[
				"de",
				"deadSet"
			],
			[
				"sin",
				"singleNumber"
			],
			[
				"sl",
				"Solution"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "Packages/Python/Python.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 209.0,
		"last_filter": "time",
		"selected_items":
		[
			[
				"time",
				"Plugin Development: Convert Syntax to .sublime-syntax"
			]
		],
		"width": 444.0
	},
	"console":
	{
		"height": 139.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/zezhen/Google Drive/workspace/leetcode"
	],
	"file_history":
	[
		"/Users/zezhen/Google Drive/workspace/leetcode/test.py",
		"/Users/zezhen/Downloads/test.json",
		"/Users/zezhen/Google Drive/workspace/leetcode/Hashmap_Stack_Queue/done/m299_bulls-and-cows.py",
		"/Users/zezhen/Dropbox/leetcode/String/Expression-Calculator/h10_regular-expression-matching.py",
		"/Users/zezhen/Dropbox/leetcode/String/good/m767_reorganize-string.py",
		"/Users/zezhen/Dropbox/leetcode/DynamicPrograming/done/m64_minimum-path-sum.py",
		"/Users/zezhen/Dropbox/leetcode/Minimax_Game/h843_guess-the-word.py",
		"/Users/zezhen/Dropbox/leetcode/String/done/m890_find-and-replace-pattern.py",
		"/Users/zezhen/Dropbox/leetcode/Hashmap_Stack_Queue/good/m855_exam-room.py",
		"/Users/zezhen/Dropbox/leetcode/DFS_BFS_UF/h803_bricks-falling-when-hit.py",
		"/Users/zezhen/Dropbox/leetcode/Hashmap_Stack_Queue/h857_minimum-cost-to-hire-k-workers.py",
		"/Users/zezhen/Dropbox/leetcode/List/done/m915_partition-array-into-disjoint-intervals.py",
		"/Users/zezhen/Dropbox/leetcode/Tree/h685_redundant-connection-ii.py",
		"/Users/zezhen/Dropbox/leetcode/Concurrency/MultiSessionCart.java",
		"/Users/zezhen/bucket.tsv",
		"/Users/zezhen/Dropbox/leetcode/String/h761_special-binary-string.py",
		"/Users/zezhen/Dropbox/leetcode/Graph/done/h839_similar-string-groups.py",
		"/Users/zezhen/Dropbox/leetcode/Greedy_Backtracking/h291_word-pattern-ii.py",
		"/Users/zezhen/Dropbox/leetcode/Greedy_Backtracking/h425_word-squares.py",
		"/Users/zezhen/Dropbox/leetcode/Greedy_Backtracking/h212_word-search-ii.py",
		"/Users/zezhen/Dropbox/leetcode/String/done/m616_add-bold-tag-in-string.py",
		"/Users/zezhen/Dropbox/leetcode/List/done/m926_flip-string-to-monotone-increasing.py",
		"/Users/zezhen/Dropbox/leetcode/String/h126_word-ladder-ii.py",
		"/Users/zezhen/Dropbox/leetcode/DFS_BFS_UF/h301_remove-invalid-parentheses.py",
		"/Users/zezhen/Dropbox/leetcode/String/h32_longest-valid-parentheses.py",
		"/Users/zezhen/Dropbox/leetcode/String/done/m678_valid-parenthesis-string.py",
		"/Users/zezhen/Dropbox/leetcode/String/good/m127_word-ladder.py",
		"/Users/zezhen/Dropbox/leetcode/String/h527_word-abbreviation.py",
		"/Users/zezhen/Dropbox/leetcode/Greedy_Backtracking/good/m79_word-search.py",
		"/Users/zezhen/Dropbox/leetcode/Hashmap_Stack_Queue/done/e290_word-pattern.py",
		"/Users/zezhen/Dropbox/leetcode/String/FindSubstring/m916_word-subsets.py",
		"/Users/zezhen/Dropbox/leetcode/archive/todo/NoTag/m192_word-frequency.py",
		"/Users/zezhen/Dropbox/leetcode/String/Expression-Calculator/m856_score-of-parentheses.py",
		"/Users/zezhen/Dropbox/leetcode/String/Expression-Calculator/m241_different-ways-to-add-parentheses.py",
		"/Users/zezhen/Dropbox/leetcode/Greedy_Backtracking/done/m921_minimum-add-to-make-parentheses-valid.py",
		"/Users/zezhen/Dropbox/leetcode/String/done/e459_repeated-substring-pattern.py",
		"/Users/zezhen/Dropbox/leetcode/String/done/m22_generate-parentheses.py",
		"/Users/zezhen/Dropbox/leetcode/Tree/h850_rectangle-area-ii.py",
		"/Users/zezhen/Dropbox/leetcode/DynamicPrograming/h218_the-skyline-problem.py",
		"/Users/zezhen/Dropbox/leetcode/BinarySearch/h793_preimage-size-of-factorial-zeroes-function.py",
		"/Users/zezhen/Dropbox/leetcode/DynamicPrograming/good/m279_perfect-squares.py",
		"/Users/zezhen/Dropbox/leetcode/List/todo/h85_maximal-rectangle.py",
		"/Users/zezhen/Dropbox/leetcode/List/todo/h84_largest-rectangle-in-histogram.py",
		"/Users/zezhen/Dropbox/leetcode/BinarySearch/good/h302_smallest-rectangle-enclosing-black-pixels.py",
		"/Users/zezhen/Dropbox/leetcode/List/todo/h391_perfect-rectangle.py",
		"/Users/zezhen/Dropbox/leetcode/Hashmap_Stack_Queue/good/m939_minimum-area-rectangle.py",
		"/Users/zezhen/Dropbox/leetcode/BinarySearch/h363_max-sum-of-rectangle-no-larger-than-k.py",
		"/Users/zezhen/Dropbox/leetcode/List/todo/m497_random-point-in-non-overlapping-rectangles.py",
		"/Users/zezhen/Dropbox/leetcode/DynamicPrograming/done/e53_maximum-subarray.py",
		"/Users/zezhen/Dropbox/leetcode/DynamicPrograming/good/m698_partition-to-k-equal-sum-subsets.py",
		"/Users/zezhen/Dropbox/leetcode/String/h115_distinct-subsequences.py",
		"/Users/zezhen/Dropbox/leetcode/DynamicPrograming/good/m215_kth-largest-element-in-an-array.py",
		"/Users/zezhen/Dropbox/leetcode/List/todo/h41_first-missing-positive.py",
		"/Users/zezhen/Dropbox/leetcode/Palindrome/h564_find-the-closest-palindrome.py",
		"/Users/zezhen/Dropbox/leetcode/test.py",
		"/Users/zezhen/Dropbox/leetcode/DynamicPrograming/done/m787_cheapest-flights-within-k-stops.py",
		"/Users/zezhen/Dropbox/leetcode/Edmonds_Karp.py",
		"/Users/zezhen/Dropbox/leetcode/DynamicPrograming/good/m764_largest-plus-sign.py",
		"/Users/zezhen/Dropbox/leetcode/DynamicPrograming/h174_dungeon-game.py",
		"/Users/zezhen/Dropbox/leetcode/Combination-Permutation-Subset/h903_valid-permutations-for-di-sequence.py",
		"/Users/zezhen/Dropbox/leetcode/BinarySearch/h410_split-array-largest-sum.py",
		"/Users/zezhen/Dropbox/leetcode/pickup_cars.py",
		"/Users/zezhen/Dropbox/leetcode/DynamicPrograming/h940_distinct-subsequences-ii.py",
		"/Users/zezhen/Dropbox/leetcode/DynamicPrograming/h902_numbers-at-most-n-given-digit-set.py",
		"/Users/zezhen/Dropbox/leetcode/DynamicPrograming/h920_number-of-music-playlists.py",
		"/Users/zezhen/Dropbox/leetcode/DFS_BFS_UF/done/m752_open-the-lock.py",
		"/Users/zezhen/Dropbox/leetcode/DynamicPrograming/h847_shortest-path-visiting-all-nodes.py",
		"/Users/zezhen/Dropbox/leetcode/DynamicPrograming/h879_profitable-schemes.py",
		"/Users/zezhen/Dropbox/leetcode/DynamicPrograming/h871_minimum-number-of-refueling-stops.py",
		"/Users/zezhen/Dropbox/leetcode/DynamicPrograming/h546_remove-boxes.py",
		"/Users/zezhen/Dropbox/leetcode/DynamicPrograming/h664_strange-printer.py",
		"/Users/zezhen/Dropbox/leetcode/DynamicPrograming/h727_minimum-window-subsequence.py",
		"/Users/zezhen/Dropbox/leetcode/DynamicPrograming/h312_burst-balloons.py",
		"/Users/zezhen/Dropbox/leetcode/DynamicPrograming/h741_cherry-pickup.py",
		"/Users/zezhen/Dropbox/leetcode/DynamicPrograming/h656_coin-path.py",
		"/Users/zezhen/Dropbox/leetcode/helper.py",
		"/Users/zezhen/Dropbox/leetcode/DynamicPrograming/h629_k-inverse-pairs-array.py",
		"/Users/zezhen/Dropbox/leetcode/DynamicPrograming/h552_student-attendance-record-ii.py",
		"/Users/zezhen/Dropbox/leetcode/DynamicPrograming/h600_non-negative-integers-without-consecutive-ones.py",
		"/Users/zezhen/Dropbox/leetcode/DynamicPrograming/h517_super-washing-machines.py",
		"/Users/zezhen/Dropbox/leetcode/DynamicPrograming/h568_maximum-vacation-days.py",
		"/Users/zezhen/Dropbox/leetcode/String/done/e551_student-attendance-record-i.py",
		"/Users/zezhen/Dropbox/leetcode/DynamicPrograming/h493_reverse-pairs.py",
		"/Users/zezhen/Dropbox/leetcode/DynamicPrograming/h514_freedom-trail.py",
		"/Users/zezhen/Dropbox/leetcode/Palindrome/h336_palindrome-pairs.py",
		"/Users/zezhen/Dropbox/leetcode/DynamicPrograming/h471_encode-string-with-shortest-length.py",
		"/Users/zezhen/Dropbox/leetcode/DynamicPrograming/h446_arithmetic-slices-ii-subsequence.py",
		"/Users/zezhen/Dropbox/leetcode/DynamicPrograming/h466_count-the-repetitions.py",
		"/Users/zezhen/Dropbox/leetcode/DynamicPrograming/h327_count-of-range-sum.py",
		"/Users/zezhen/Dropbox/leetcode/DynamicPrograming/h315_count-of-smaller-numbers-after-self.py",
		"/Users/zezhen/Dropbox/leetcode/DynamicPrograming/h321_create-maximum-number.py",
		"/Users/zezhen/Dropbox/leetcode/DynamicPrograming/h265_paint-house-ii.py",
		"/Users/zezhen/Dropbox/leetcode/DynamicPrograming/done/e256_paint-house.py",
		"/Users/zezhen/Dropbox/leetcode/DynamicPrograming/h943_find-the-shortest-superstring.py",
		"/Users/zezhen/Dropbox/leetcode/Tree/good/m220_contains-duplicate-iii.py",
		"/Users/zezhen/Dropbox/leetcode/move.py",
		"/Users/zezhen/Dropbox/leetcode/List/todo/h23_merge-k-sorted-lists.py",
		"/Users/zezhen/Dropbox/leetcode/List/done/m48_rotate-image.py",
		"/Users/zezhen/Downloads/bucket.tsv",
		"/Users/zezhen/Dropbox/leetcode/Math/done/e202_happy-number.py",
		"/Users/zezhen/Dropbox/leetcode/String/m385_mini-parser.py",
		"/Users/zezhen/Dropbox/leetcode/Hashmap_Stack_Queue/done/m299_bulls-and-cows.py",
		"/Users/zezhen/Dropbox/leetcode/airbnb/guess_number.py",
		"/Users/zezhen/Dropbox/leetcode/Hashmap_Stack_Queue/h295_find-median-from-data-stream.py",
		"/Users/zezhen/Dropbox/leetcode/String/good/m583_delete-operation-for-two-strings.py",
		"/Users/zezhen/Dropbox/leetcode/String/good/m712_minimum-ascii-delete-sum-for-two-strings.py",
		"/Users/zezhen/Dropbox/leetcode/String/good/h72_edit-distance.py",
		"/Users/zezhen/Dropbox/leetcode/DFS_BFS_UF/h773_sliding-puzzle.py",
		"/Users/zezhen/Dropbox/leetcode/airbnb/pour_water.py",
		"/Users/zezhen/Dropbox/leetcode/List/todo/h42_trapping-rain-water.py",
		"/Users/zezhen/Dropbox/leetcode/airbnb/hilbert_curve.py",
		"/Users/zezhen/Dropbox/leetcode/Hashmap_Stack_Queue/good/m756_pyramid-transition-matrix.py",
		"/Users/zezhen/Dropbox/leetcode/Graph/good/m323_number-of-connected-components-in-an-undirected-graph.py",
		"/Users/zezhen/Downloads/conjunctions.conf",
		"/Users/zezhen/Dropbox/leetcode/Hashmap_Stack_Queue/h407_trapping-rain-water-ii.py",
		"/Users/zezhen/Dropbox/leetcode/String/h44_wildcard-matching.py",
		"/Users/zezhen/Dropbox/leetcode/airbnb/ip_range_to_cidr.py",
		"/Users/zezhen/Downloads/exchange.tsv",
		"/Users/zezhen/Dropbox/leetcode/Design/done/m251_flatten-2d-vector.py",
		"/Users/zezhen/Dropbox/leetcode/Hashmap_Stack_Queue/done/m341_flatten-nested-list-iterator.py",
		"/Users/zezhen/Dropbox/leetcode/String/m49_group-anagrams.py",
		"/Users/zezhen/Dropbox/leetcode/Hashmap_Stack_Queue/done/m846_hand-of-straights.py",
		"/Users/zezhen/Dropbox/leetcode/List/done/m825_friends-of-appropriate-ages.py",
		"/Users/zezhen/Dropbox/leetcode/List/done/m826_most-profit-assigning-work.py",
		"/Users/zezhen/Dropbox/leetcode/DFS_BFS_UF/h827_making-a-large-island.py",
		"/Users/zezhen/Dropbox/leetcode/DFS_BFS_UF/done/good/h305_number-of-islands-ii.py",
		"/Users/zezhen/Dropbox/leetcode/Palindrome/m647_palindromic-substrings.py",
		"/Users/zezhen/Dropbox/leetcode/Tree/done/m648_replace-words.py"
	],
	"find":
	{
		"height": 46.0
	},
	"find_in_files":
	{
		"height": 104.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			" ",
			",\\n}",
			"False",
			"True",
			"FeatureType.CATEGORICAL",
			"data",
			"reverse link",
			"reverse",
			"^\\d+\\. ",
			"siteAt",
			"self.seat",
			"101100101100",
			"edge",
			"^ ",
			"^.*?\\.",
			"absolute",
			" +",
			"Dijkstra\nDijkstra",
			"Dijkstra\nDijkstra\ndijkstra",
			"A\\*",
			"A*",
			"ballon",
			"\\],",
			"“",
			"”",
			"sortedcontainer",
			"word2",
			"word1",
			"null,",
			",,",
			"\\]",
			"\\[",
			"null.",
			"0+",
			"null,",
			",,",
			"\\]",
			"\\[",
			" +",
			"  +",
			" +",
			"\\],",
			" ",
			", ",
			"gg",
			"find_cells_id",
			"group",
			"groups",
			"union find",
			"zuo",
			"pue",
			"paa",
			"assert",
			"odd_jump",
			"even_jump",
			"DI",
			"\\],",
			"→",
			"op ",
			"target_count_dict",
			"length",
			"print",
			"S",
			"T",
			"print",
			" ",
			"maxArea",
			":.*",
			"end",
			"left",
			",",
			"12",
			"new_bottom",
			" ",
			"_min",
			"Z",
			"\\n\\n",
			"./archi.*",
			".*?:https",
			".*?:",
			"\\t",
			" ",
			",",
			"\\[",
			",",
			" ",
			"\\t",
			" ",
			"return",
			"get_property_page",
			"get",
			"pd,",
			"\\]\\n",
			"= ",
			"\\['",
			"pdget\\(",
			"\\['",
			"root",
			"null",
			" ",
			"null",
			"helper.TreeNode object at ",
			"\\),",
			"helper.TreeNode object at ",
			"\\),",
			"null",
			"root",
			"nonRoot",
			"rroot",
			"lroot",
			"kSegment",
			"_protobuf",
			"segmentdataset",
			"ternary",
			"superquad",
			"cb_superquad/prod/super_quad/",
			"superquad_protobuf",
			"bf1",
			"superquad",
			" +\\n",
			"^[A-z].*\\n",
			" +\\n",
			"^[A-z].*\\n",
			" +\\n",
			"^[A-z].*\\n",
			" +\\n",
			"^[A-z].*\\n",
			" +\\n"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			",\"name\": \"",
			"\\n}",
			"\"False\"",
			"\"True\"",
			"\"FeatureType.CATEGORICAL\"",
			"",
			"sitAt",
			"self.pos",
			"edges",
			"",
			"\\t",
			"]\\n",
			"\\n]",
			"\"",
			"s2",
			"s1",
			"",
			",",
			"",
			"0",
			"",
			",",
			"",
			"\\t",
			"]\\n",
			"",
			"\\n",
			"groups",
			"find_group_id",
			"cells",
			"gg",
			"print",
			"tmp_odd",
			"tmp_even",
			"]\\n",
			"->",
			"sign ",
			"counter",
			"size",
			"s",
			"t",
			"# print",
			"",
			"appendFreq",
			"freq",
			"\\n",
			"uplevels",
			" ",
			"_max",
			"P",
			"\\n",
			"",
			"https",
			"",
			"    ",
			" ",
			"','",
			"['",
			"','",
			",",
			"    ",
			" ",
			"self.get",
			"pd[",
			")\\n",
			"= get(",
			",'",
			",",
			"pd[",
			"get('",
			"node",
			"None",
			" ",
			"None",
			"",
			"\\n",
			"",
			"\\n",
			"None",
			"node",
			"",
			"r",
			"l",
			"kQuerySegment",
			"_prod",
			"segment/dataset",
			"staging",
			"segment",
			"cbscience/segment",
			"segment_protobuf",
			"gq1",
			"segment",
			",",
			"",
			",",
			"",
			",",
			"",
			",",
			"",
			",",
			"",
			",",
			"",
			",",
			"",
			",",
			"",
			",",
			"",
			",",
			"",
			",",
			"",
			",",
			"    ",
			"",
			",",
			"",
			"false",
			"true",
			"\"",
			"','",
			"\\t",
			",",
			"cs",
			"sav",
			"cv"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 40.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 270.0
	},
	"output.find_results":
	{
		"height": 230.0
	},
	"output.sbt":
	{
		"height": 0.0
	},
	"output.sbt_error":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "leetcode.sublime-project",
	"replace":
	{
		"height": 84.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"Bulls and Cows",
				"Hashmap_Stack_Queue/done/m299_bulls-and-cows.py"
			],
			[
				"h10_",
				"String/Expression-Calculator/h10_regular-expression-matching.py"
			],
			[
				"",
				"public boolean regMatch(String source, String patt"
			],
			[
				"767",
				"String/good/m767_reorganize-string.py"
			],
			[
				"803",
				"DFS_BFS_UF/h803_bricks-falling-when-hit.py"
			],
			[
				"855",
				"Hashmap_Stack_Queue/good/m855_exam-room.py"
			],
			[
				"685",
				"Tree/h685_redundant-connection-ii.py"
			],
			[
				"951",
				"List/done/m915_partition-array-into-disjoint-intervals.py"
			],
			[
				"857",
				"Hashmap_Stack_Queue/h857_minimum-cost-to-hire-k-workers.py"
			],
			[
				"890",
				"String/done/m890_find-and-replace-pattern.py"
			],
			[
				"843",
				"Minimax_Game/h843_guess-the-word.py"
			],
			[
				"m64_",
				"DynamicPrograming/done/m64_minimum-path-sum.py"
			],
			[
				"special-binary-string",
				"String/h761_special-binary-string.py"
			],
			[
				"926",
				"List/done/m926_flip-string-to-monotone-increasing.py"
			],
			[
				"flip-string-to-monotone-increasing",
				"List/done/m926_flip-string-to-monotone-increasing.py"
			],
			[
				"add-bold-tag-in-string",
				"String/done/m616_add-bold-tag-in-string.py"
			],
			[
				"word-search-ii",
				"Greedy_Backtracking/h212_word-search-ii.py"
			],
			[
				"word-squares",
				"Greedy_Backtracking/h425_word-squares.py"
			],
			[
				"word-pattern-ii",
				"Greedy_Backtracking/h291_word-pattern-ii.py"
			],
			[
				"word-ladder",
				"String/h126_word-ladder-ii.py"
			],
			[
				"similar-string-groups",
				"Graph/done/h839_similar-string-groups.py"
			],
			[
				"remove-invalid-parentheses",
				"DFS_BFS_UF/h301_remove-invalid-parentheses.py"
			],
			[
				"longest-valid-parentheses",
				"String/h32_longest-valid-parentheses.py"
			],
			[
				"valid-parenthesis-string",
				"String/done/m678_valid-parenthesis-string.py"
			],
			[
				"word",
				"Minimax_Game/h843_guess-the-word.py"
			],
			[
				"word ladder",
				"String/good/m127_word-ladder.py"
			],
			[
				"parentheses",
				"Greedy_Backtracking/done/m921_minimum-add-to-make-parentheses-valid.py"
			],
			[
				"repeat",
				"String/done/e459_repeated-substring-pattern.py"
			],
			[
				"regular-expression-matching",
				"String/Expression-Calculator/h10_regular-expression-matching.py"
			],
			[
				"skyline",
				"DynamicPrograming/h218_the-skyline-problem.py"
			],
			[
				"rectangle-area-ii",
				"Tree/h850_rectangle-area-ii.py"
			],
			[
				"perfect",
				"DynamicPrograming/good/m279_perfect-squares.py"
			],
			[
				"rectangle",
				"List/todo/m497_random-point-in-non-overlapping-rectangles.py"
			],
			[
				"recta",
				"List/todo/h85_maximal-rectangle.py"
			],
			[
				"first miss",
				"List/todo/h41_first-missing-positive.py"
			],
			[
				"kth",
				"DynamicPrograming/good/m215_kth-largest-element-in-an-array.py"
			],
			[
				"partition-to-k-equal-sum-subsets",
				"DynamicPrograming/good/m698_partition-to-k-equal-sum-subsets.py"
			],
			[
				"distinct-subsequences",
				"String/h115_distinct-subsequences.py"
			],
			[
				"max subarray",
				"DynamicPrograming/done/e53_maximum-subarray.py"
			],
			[
				"largest-plus-sign ",
				"DynamicPrograming/good/m764_largest-plus-sign.py"
			],
			[
				"cheapest-flights-within-k-stops",
				"DynamicPrograming/done/m787_cheapest-flights-within-k-stops.py"
			],
			[
				"word la",
				"String/h126_word-ladder-ii.py"
			],
			[
				"dung",
				"DynamicPrograming/h174_dungeon-game.py"
			],
			[
				"split",
				"BinarySearch/h410_split-array-largest-sum.py"
			],
			[
				"Valid Permutations for DI Sequence    ",
				"Combination-Permutation-Subset/h903_valid-permutations-for-di-sequence.py"
			],
			[
				"world",
				"String/h126_word-ladder-ii.py"
			],
			[
				"cherry pickup",
				"DynamicPrograming/h741_cherry-pickup.py"
			],
			[
				"Student Attendance Record",
				"String/done/e551_student-attendance-record-i.py"
			],
			[
				"517",
				"DynamicPrograming/h517_super-washing-machines.py"
			],
			[
				"palindrome",
				"Palindrome/h336_palindrome-pairs.py"
			],
			[
				"paint-house",
				"DynamicPrograming/done/e256_paint-house.py"
			],
			[
				"contains",
				"Tree/good/m220_contains-duplicate-iii.py"
			],
			[
				"supe",
				"DynamicPrograming/h943_find-the-shortest-superstring.py"
			],
			[
				"maxi",
				"List/todo/h85_maximal-rectangle.py"
			],
			[
				"rotate",
				"List/done/m48_rotate-image.py"
			],
			[
				"h85",
				"List/todo/h85_maximal-rectangle.py"
			],
			[
				"k merge",
				"List/todo/h23_merge-k-sorted-lists.py"
			],
			[
				"palin",
				"Palindrome/h336_palindrome-pairs.py"
			],
			[
				"385",
				"String/m385_mini-parser.py"
			],
			[
				"85_",
				"List/todo/h85_maximal-rectangle.py"
			],
			[
				"202",
				"Math/done/e202_happy-number.py"
			],
			[
				"h23_",
				"List/todo/h23_merge-k-sorted-lists.py"
			],
			[
				"find",
				"Hashmap_Stack_Queue/h295_find-median-from-data-stream.py"
			],
			[
				"bull",
				"Hashmap_Stack_Queue/done/m299_bulls-and-cows.py"
			],
			[
				"edit-distance",
				"String/good/h72_edit-distance.py"
			],
			[
				"minimum-ascii-delete-sum-for-two-strings",
				"String/good/m712_minimum-ascii-delete-sum-for-two-strings.py"
			],
			[
				"delete-operation-for-two-strings",
				"String/good/m583_delete-operation-for-two-strings.py"
			],
			[
				"sliding g",
				"DFS_BFS_UF/h773_sliding-puzzle.py"
			],
			[
				"sliding",
				"DFS_BFS_UF/h773_sliding-puzzle.py"
			],
			[
				"323_",
				"Graph/good/m323_number-of-connected-components-in-an-undirected-graph.py"
			],
			[
				"pyri",
				"Hashmap_Stack_Queue/good/m756_pyramid-transition-matrix.py"
			],
			[
				"trapping-rain-water",
				"Hashmap_Stack_Queue/h407_trapping-rain-water-ii.py"
			],
			[
				"water",
				"List/todo/h42_trapping-rain-water.py"
			],
			[
				"wild",
				"String/h44_wildcard-matching.py"
			],
			[
				"regular",
				"String/Expression-Calculator/h10_regular-expression-matching.py"
			],
			[
				"find med",
				"Hashmap_Stack_Queue/h295_find-median-from-data-stream.py"
			],
			[
				"341",
				"Hashmap_Stack_Queue/done/m341_flatten-nested-list-iterator.py"
			],
			[
				"251",
				"Design/done/m251_flatten-2d-vector.py"
			],
			[
				"Group Anagrams",
				"String/m49_group-anagrams.py"
			],
			[
				"Shortest Path Visiting All Nodes",
				"DynamicPrograming/h847_shortest-path-visiting-all-nodes.py"
			],
			[
				"827",
				"DFS_BFS_UF/h827_making-a-large-island.py"
			],
			[
				"826",
				"List/done/m826_most-profit-assigning-work.py"
			],
			[
				"825",
				"List/done/m825_friends-of-appropriate-ages.py"
			],
			[
				"Maximum Length of Pair Chain",
				"DynamicPrograming/done/m646_maximum-length-of-pair-chain.py"
			],
			[
				"replace",
				"Tree/done/m648_replace-words.py"
			],
			[
				"palindro",
				"Palindrome/m647_palindromic-substrings.py"
			],
			[
				"test",
				"test.py"
			],
			[
				"skyl",
				"DynamicPrograming/h218_the-skyline-problem.py"
			],
			[
				"sky",
				"DynamicPrograming/h218_the-skyline-problem.py"
			],
			[
				"600",
				"DynamicPrograming/h600_non-negative-integers-without-consecutive-ones.py"
			],
			[
				"598",
				"Math/done/e598_range-addition-ii.py"
			],
			[
				"975",
				"DynamicPrograming/good/h975_odd-even-jump.py"
			],
			[
				"823",
				"Tree/done/m823_binary-trees-with-factors.py"
			],
			[
				"820",
				"archive/todo/NoTag/m820_short-encoding-of-words.py"
			],
			[
				"822",
				"archive/todo/NoTag/m822_card-flipping-game.py"
			],
			[
				"821",
				"archive/todo/NoTag/e821_shortest-distance-to-a-character.py"
			],
			[
				"trapp",
				"List/todo/h42_trapping-rain-water.py"
			],
			[
				"407",
				"Hashmap_Stack_Queue/h407_trapping-rain-water-ii.py"
			],
			[
				"406",
				"Greedy_Backtracking/good/m406_queue-reconstruction-by-height.py"
			],
			[
				"405",
				"Hashmap_Stack_Queue/done/e405_convert-a-number-to-hexadecimal.py"
			],
			[
				"404",
				"Tree/done/e404_sum-of-left-leaves.py"
			],
			[
				"818",
				"DynamicPrograming/h818_race-car.py"
			],
			[
				"Trapping Rain Water",
				"List/todo/h42_trapping-rain-water.py"
			],
			[
				"Container With Most Water",
				"List/done/m11_container-with-most-water.py"
			],
			[
				"number-of-subarrays-with-bounded-maximum",
				"List/todo/m795_number-of-subarrays-with-bounded-maximum.py"
			],
			[
				"reverse",
				"List/done/e206_reverse-linked-list.py"
			],
			[
				"linked-list-cycle-ii",
				"List/done/m142_linked-list-cycle-ii.py"
			],
			[
				"m215",
				"DynamicPrograming/good/m215_kth-largest-element-in-an-array.py"
			],
			[
				"901",
				"Hashmap_Stack_Queue/good/m901_online-stock-span.py"
			],
			[
				"palindrome-permutation",
				"Palindrome/e266_palindrome-permutation.py"
			],
			[
				"construct-binary-tree-from-string",
				"String-1115/done/m536_construct-binary-tree-from-string.py"
			],
			[
				"m718",
				"BinarySearch-1118/m718_maximum-length-of-repeated-subarray.py"
			],
			[
				"Longest Substring with At Most Two Distinct Characters",
				"String-1115/h340_longest-substring-with-at-most-k-distinct-characters.py"
			],
			[
				"longest-palindromic-subsequence",
				"Palindrome-1225/m516_longest-palindromic-subsequence.py"
			],
			[
				"count-different-palindromic-subsequences",
				"Palindrome-1225/h730_count-different-palindromic-subsequences.py"
			],
			[
				"palindrome-partitioning-ii",
				"Palindrome-1225/h132_palindrome-partitioning-ii.py"
			],
			[
				"palindrome-partitioning",
				"Palindrome-1225/h132_palindrome-partitioning-ii.py"
			],
			[
				"largest-palindrome-product",
				"archive/todo/NoTag/e479_largest-palindrome-product.py"
			],
			[
				"maze",
				"DFS_BFS_UF-1212/done/m490_the-maze.py"
			],
			[
				"smallest-range",
				"Math/done/e908_smallest-range-i.py"
			],
			[
				"bri",
				"Hashmap_Stack_Queue-1219/m554_brick-wall.py"
			],
			[
				"spiral-matrix",
				"List-1112/todo/m59_spiral-matrix-ii.py"
			],
			[
				"bulb-switche",
				"zion-Math/done/m319_bulb-switcher.py"
			],
			[
				"perm",
				"Greedy_Backtracking-1216/m46_permutations.py"
			],
			[
				"minimum-moves-to-equal-array-elements",
				"zion-Math/todo/e453_minimum-moves-to-equal-array-elements.py"
			],
			[
				"shortest-word-distance",
				"List-1112/todo/m245_shortest-word-distance-iii.py"
			],
			[
				"combination-sum",
				"zion-Greedy_Backtracking_etc/m17_letter-combinations-of-a-phone-number.py"
			],
			[
				"shortest-palindrome",
				"String-1115/h214_shortest-palindrome.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Google Drive/workspace/leetcode/leetcode.sublime-workspace"
			],
			[
				"bl",
				"~/Dropbox/blog/blog.sublime-project"
			],
			[
				"tmp",
				"~/workspace/tmp/tmp.sublime-project"
			],
			[
				"tm",
				"~/workspace/tmp/tmp.sublime-project"
			],
			[
				"ai",
				"~/workspace/AI-Demo/ai.sublime-project"
			],
			[
				"scrat",
				"~/workspace/scratch-flash/scratch.sublime-project"
			],
			[
				"da",
				"~/workspace/archive/conf/budget_dashboard.sublime-project"
			],
			[
				"dashb",
				"~/workspace/archive/conf/budget_dashboard.sublime-project"
			],
			[
				"cur",
				"~/workspace/archive/conf/curveball.sublime-project"
			],
			[
				"data",
				"~/workspace/archive/conf/budget_dashboard.sublime-project"
			],
			[
				"budge",
				"~/workspace/archive/conf/budget_dashboard.sublime-project"
			],
			[
				"budget",
				"~/workspace/archive/conf/budget_dashboard.sublime-project"
			],
			[
				"bu",
				"~/workspace/archive/conf/budget_dashboard.sublime-project"
			],
			[
				"dash",
				"~/workspace/archive/conf/budget_dashboard.sublime-project"
			],
			[
				"das",
				"/Users/zezhen/workspace/archive/conf/budget_dashboard.sublime-project"
			],
			[
				"bri",
				"/Users/zezhen/workspace/archive/conf/brick.sublime-project"
			],
			[
				"br",
				"/Users/zezhen/workspace/archive/conf/brick.sublime-project"
			],
			[
				"op",
				"/Users/zezhen/workspace/archive/conf/operability.sublime-project"
			],
			[
				"brick",
				"/Users/zezhen/workspace/archive/conf/brick.sublime-project"
			],
			[
				"curveball",
				"/Users/zezhen/workspace/archive/conf/curveball.sublime-project"
			],
			[
				"ffl",
				"/Users/zezhen/workspace/archive/conf/ffl_tools.sublime-project"
			],
			[
				"curve",
				"/Users/zezhen/workspace/archive/conf/curveball.sublime-project"
			],
			[
				"boost",
				"/Users/zezhen/workspace/archive/conf/boostrap.sublime-project"
			],
			[
				"curvebal",
				"/Users/zezhen/workspace/archive/conf/curveball.sublime-project"
			],
			[
				"cr",
				"/Users/zezhen/workspace/archive/conf/curveball.sublime-project"
			],
			[
				"t",
				"/Users/zezhen/workspace/archive/conf/tmp.sublime-project"
			],
			[
				"boot",
				"/Users/zezhen/workspace/archive/conf/boostrap.sublime-project"
			],
			[
				"cu",
				"/Users/zezhen/workspace/archive/conf/curveball.sublime-project"
			],
			[
				"boo",
				"/Users/zezhen/workspace/archive/conf/boostrap.sublime-project"
			],
			[
				"git",
				"/Users/zezhen/workspace/archive/conf/githubblog.sublime-project"
			],
			[
				"ff",
				"/Users/zezhen/workspace/archive/conf/ffl_tools.sublime-project"
			],
			[
				"bo",
				"/Users/zezhen/workspace/archive/conf/boostrap.sublime-project"
			],
			[
				"boots",
				"/Users/zezhen/workspace/archive/conf/boostrap.sublime-project"
			],
			[
				"dashboard",
				"/Users/zezhen/workspace/archive/conf/budget_dashboard.sublime-project"
			],
			[
				"ope",
				"/Users/zezhen/workspace/archive/conf/operability.sublime-project"
			],
			[
				"bud",
				"/Users/zezhen/workspace/archive/conf/budget_dashboard.sublime-project"
			],
			[
				"CUR",
				"/Users/zezhen/workspace/archive/conf/curveball.sublime-project"
			],
			[
				"optima",
				"/Users/zezhen/workspace/archive/conf/optimization.sublime-project"
			],
			[
				"opti",
				"/Users/zezhen/workspace/archive/conf/optimization.sublime-project"
			],
			[
				"opt",
				"/Users/zezhen/workspace/curveball_operability/DRPC_new/backend/optimization.sublime-project"
			],
			[
				"quad",
				"/Users/zezhen/workspace/archive/conf/quad.sublime-project"
			],
			[
				"curveb",
				"/Users/zezhen/workspace/archive/conf/curveball.sublime-project"
			],
			[
				"o",
				"/Users/zezhen/workspace/archive/conf/operability.sublime-project"
			],
			[
				"cms",
				"/Users/zezhen/workspace/archive/conf/cmr_scripts.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 420.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
